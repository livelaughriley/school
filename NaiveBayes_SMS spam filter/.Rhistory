library(data.table)
sms_raw<-data.table(
fread("http:/www.dt.fee.unicamp.br/~tiago/smsspamcollection/"))
sms_raw<-data.table(
fread(http:/www.dt.fee.unicamp.br/~tiago/smsspamcollection/))
sms_raw<-read.csv("~/SMS spam filter/sms_spam.csv")
View(sms_raw)
sms_raw<-read.csv("~/SMS spam filter/sms_spam.csv",
stringsAsFactors=FALSE)
View(sms_raw)
sms_raw<-factor(sms_raw$type)
sms_raw<-read.csv("~/SMS spam filter/sms_spam.csv",
stringsAsFactors=FALSE)
sms_raw$type<-factor(sms_raw$type)
sms_raw<-read.csv("~/SMS spam filter/sms_spam.csv",
stringsAsFactors=FALSE)
sms_raw$type
sms_raw$type<-factor(sms_raw$type)
sms_raw$type
sms_raw<-read.csv("~/SMS spam filter/sms_spam.csv")
sms_raw$type
typeof(sms_raw$type)
sms_raw$type<-factor(sms_raw$type)
typeof(sms_raw$type)
str(sms_raw$type)
table(sms_raw$type)
table(sms_raw$text)
str(sms_raw$text)
sms_raw<-read.csv("~/SMS spam filter/sms_spam.csv",
stringsAsFactors=FALSE)
str(sms_raw$text)
str(sms_raw$type)
sms_raw$type<-factor(sms_raw$type)
str(sms_raw$type)
table(sms_raw$type)
sms_raw$type<-factor(sms_raw$type)
install.packages("tm")
library(tm)
sms_corpus<-VCorpus(sms_raw$text)
?VCorpus
sms_corpus<-as.VCorpus(sms_raw$text)
sms_corpus<-VCorpus(VectorSource(sms_raw$text))
?VectorSource
sms_corpus<-VCorpus(SimpleSource(sms_raw$text))
sms_corpus<-VCorpus(VectorSource(sms_raw$text))
print(sms_corpus)
sms_corpus[1:2]
inspect(sms_corpus[1:2])
View(sms_corpus)
source('~/sms_raw1.R')
lapply(sms_corpus[1:55,as.character()])
lapply(sms_corpus[1:55,as.character])
lapply(sms_corpus[1:55],as.character])
lapply(sms_corpus[1:55],as.character)
sms_corpus_clean<-tm_map(sms_corpus,
content_transformer(tolower))
as.character(sms_corpus[[1]])
as.character(sms_corpus_clean[[1]])
sms_corpus_clean<-tm_map(sms_corpus_clean,
removeNumbers)
sms_corpus_clean<-tm_map(sms_corpus_clean,
removeWords(stopwords))
sms_corpus_clean<-tm_map(sms_corpus_clean,
removeWords(stopwords()))
sms_corpus_clean<-tm_map(sms_corpus_clean,
removeNumbers)
sms_corpus_clean<-tm_map(sms_corpus_clean,
removeWords(stopwords()))
stopwords()
stopwords(1:5)
stopwords(as.data.table(1:5))
stopwords(as.data.table(stopwords(1:5)))
as.data.frame(stopwords())
as.data.frame(stopwords(1:5))
stopwords<-as.data.frame(stopwords())
remove(stopwords)
sms_corpus_clean<-tm_map(sms_corpus_clean,
removePunctuation)
View(sms_corpus_clean)
?gsub
replacePunctuation<-function(x)
{gsub("[[:punct:]]+","",x)}
normalize()
install.packages("SnowballC")
library(SnowballC)
wordStem(c("hey","hello"))
wordStem(c("hi","hello"))
wordStem(c("hi","hello","greetings"))
wordStem(c("run","Run","running","ran","runs"))
wordStem(c("run","Run","running","runned","runs"))
wordStem("swim","swam","swimming","swims")
wordStem(c("swim","swam","swimming","swims"))
sms_corpus_clean<-tm_map(sms_corpus_clean,
stemDocument)
stemDocument()
sms_corpus_clean<-tm_map(sms_corpus_clean,
stripWhitespace)
sms_dtm<-DocumentTermMatrix(sms_corpus_clean)
sms_dtm2<-DocumentTermMatrix(sms_corpus,
control=list(tolower=T,
removeNumbers=T,
stopwords=T,
removePunctuation=T,
stemming=T))
source('~/sms_raw1.R')
sms_corpus<-VCorpus(VectorSource(sms_raw$text))
print(sms_corpus)
inspect(sms_corpus[1:2])
lapply(sms_corpus[1:55],as.character)
sms_corpus_clean<-tm_map(sms_corpus,
content_transformer(tolower))
as.character(sms_corpus[[1]])
as.character(sms_corpus_clean[[1]])
sms_corpus_clean<-tm_map(sms_corpus_clean,
removeNumbers)
sms_corpus_clean<-tm_map(sms_corpus_clean,
removeWords(stopwords()))
sms_corpus_clean<-tm_map(sms_corpus_clean,
removePunctuation)
replacePunctuation<-function(x)
{gsub("[[:punct:]]+","",x)}
library(SnowballC)
wordStem(c("swim","swam","swimming","swims"))
sms_corpus_clean<-tm_map(sms_corpus_clean,
stemDocument)
sms_corpus_clean<-tm_map(sms_corpus_clean,
stripWhitespace)
sms_dtm<-DocumentTermMatrix(sms_corpus_clean)
sms_dtm2<-DocumentTermMatrix(sms_corpus,
control=list(tolower=T,
removeNumbers=T,
stopwords=T,
removePunctuation=T,
stemming=T))
sms_dtm2<-DocumentTermMatrix(sms_corpus,
control=list(tolower=T,
removeNumbers=T,
stopwords=T,
removePunctuation=T,
stemming=T))
sms_dtm<-DocumentTermMatrix(sms_corpus_clean)
sms_dtm2<-DocumentTermMatrix(sms_corpus,
control=list(tolower=T,
removeNumbers=T,
stopwords=T,
removePunctuation=T,
stemming=T))
source('~/sms_raw1.R')
lapply(sms_corpus[1:2],as.character)
source('~/sms_raw1.R')
?lapply(list, function)
?lapply
lapply(sms_corpus[1:2],as.character(sms_corpus[1:2]))
lapply(sms_corpus[1:2])
lapply(sms_corpus[1:2],as.character=T)
lapply(sms_corpus[1:2],as.character())
lapply(sms_corpus[1:2],as.character)
source('~/sms_raw1.R')
sms_dtm_train<-sms_dtm[1:4169,]
sms_dtm_test<-sms_dtm[4170:5559,]
View(sms_raw)
sms_train_labels<sms_raw[1:4169,1]
prop.table(table(sms_train_labels))
sms_train_labels<sms_raw[1:4169,1]
sms_train_labels<-sms_raw[1:4169,1]
prop.table(table(sms_train_labels))
sms_train_labels<-sms_raw[1:4169,]$type
prop.table(table(sms_train_labels))
sms_train_labels<-sms_raw[1:4169,"type"]
prop.table(table(sms_train_labels))
sms_train_labels<-sms_raw[1:4169,]$type
sms_test_labels<-sms_raw[4170:5559,]$type
install.packages("wordcloud")
library(wordcloud)
wordcloud(sms_corpus_clean,
min.freq=50,
random.order=FALSE)
sms_corpus_clean<-tm_map(sms_corpus_clean,
removeWords,
stopwords())
sms_corpus_clean<-tm_map(sms_corpus_clean,
removePunctuation)
library(SnowballC)
wordStem(c("swim","swam","swimming","swims"))
sms_corpus_clean<-tm_map(sms_corpus_clean,
stemDocument)
sms_corpus_clean<-tm_map(sms_corpus_clean,
stripWhitespace)
sms_dtm<-DocumentTermMatrix(sms_corpus_clean)
sms_dtm2<-DocumentTermMatrix(sms_corpus,
control=list(tolower=T,
removeNumbers=T,
stopwords=T,
removePunctuation=T,
stemming=T))
sms_dtm_train<-sms_dtm[1:4169,]
sms_dtm_test<-sms_dtm[4170:5559,]
sms_train_labels<-sms_raw[1:4169,]$type
sms_test_labels<-sms_raw[4170:5559,]$type
library(wordcloud)
wordcloud(sms_corpus_clean,
min.freq=50,
random.order=FALSE)
?wordcloud
wordcloud(sms_corpus_clean,
min.freq=50,
scale=c(4,.5),
random.order=FALSE)
wordcloud(sms_corpus_clean,
min.freq=50,
scale=c(2,.5),
random.order=FALSE)
wordcloud(sms_corpus_clean,
min.freq=50,
scale=c(2,1),
random.order=FALSE)
wordcloud(sms_corpus_clean,
min.freq=50,
scale=c(3,1),
random.order=FALSE)
wordcloud(sms_corpus_clean,
min.freq=50,
scale=c(3,.5),
random.order=FALSE)
wordcloud(sms_corpus_clean,
min.freq=75,
scale=c(3,.5),
random.order=FALSE)
wordcloud(sms_corpus_clean,
min.freq=25,
scale=c(3,.5),
random.order=FALSE)
wordcloud(sms_corpus_clean,
min.freq=25,
scale=c(3,.5),
random.order=FALSE)
dev.off()
wordcloud(sms_corpus_clean,
min.freq=25,
scale=c(3,.5),
random.order=FALSE)
spam<-subset(sms_raw,type=="spam")
ham<-subset(sms_raw,type=="ham")
View(sms_corpus_clean)
dev.off()
wordcloud(sms_corpus_clean,
min.freq=25,
scale=c(3,.5),
random.order=FALSE)
?by
?order
?frequency
wordcloud(sms_corpus_clean,
min.freq=25,
scale=c(3,.2),
random.order=FALSE)
dev.off()
wordcloud(sms_corpus_clean,
min.freq=50,
scale=c(3,.2),
random.order=FALSE)
wordcloud(sms_corpus_clean,
min.freq=50,
scale=c(5,.2),
random.order=FALSE)
dev.off()
wordcloud(sms_corpus_clean,
min.freq=50,
scale=c(5,.2),
random.order=FALSE)
?wordc''
?wordcloud
wordcloud(sms_corpus_clean,
min.freq=50,
scale=c(5,.2),
random.order=FALSE,
colors="lightcoral")
wordcloud(sms_corpus_clean,
min.freq=50,
scale=c(5,.2),
random.order=FALSE,
colors="blue")
dev.off()
wordcloud(sms_corpus_clean,
min.freq=50,
scale=c(5,.2),
random.order=FALSE,
colors="blue")
wordcloud(ham$text,
max.words=40,
scale=c(3,0.5))
wordcloud(spam$text,
max.words=40,
scale=c(3,0.5))
source('~/sms_raw1.R')
sms_freq_words<-findFreqTerms(sms_dtm_train,5)
u
library(wordcloud)
library(tm)
library(SnowballC)
library(wordcloud)
library(klaR)
library(gmodels)
sms_raw<-read.csv("~/SMS spam filter/sms_spam.csv",
stringsAsFactors=FALSE)
sms_raw$type<-factor(sms_raw$type)
library(tm)
sms_corpus<-VCorpus(VectorSource(sms_raw$text))
print(sms_corpus)
inspect(sms_corpus[1:2])
sms_corpus_clean<-tm_map(sms_corpus,
content_transformer(tolower))
as.character(sms_corpus[[1]])
as.character(sms_corpus_clean[[1]])
sms_corpus_clean<-tm_map(sms_corpus_clean,
removeNumbers)
sms_corpus_clean<-tm_map(sms_corpus_clean,
removeWords,
stopwords())
sms_corpus_clean<-tm_map(sms_corpus_clean,
removePunctuation)
replacePunctuation<-function(x)
{gsub("[[:punct:]]+","",x)}
library(SnowballC)
wordStem(c("swim","swam","swimming","swims"))
sms_corpus_clean<-tm_map(sms_corpus_clean,
stemDocument)
sms_corpus_clean<-tm_map(sms_corpus_clean,
stripWhitespace)
sms_dtm<-DocumentTermMatrix(sms_corpus_clean)
sms_dtm2<-DocumentTermMatrix(sms_corpus,
control=list(tolower=T,
removeNumbers=T,
stopwords=T,
removePunctuation=T,
stemming=T))
sms_dtm_train<-sms_dtm[1:4169,]
sms_dtm_test<-sms_dtm[4170:5559,]
sms_train_labels<-sms_raw[1:4169,]$type
sms_test_labels<-sms_raw[4170:5559,]$type
library(wordcloud)
wordcloud(sms_corpus_clean,
min.freq=50,
scale=c(5,.2),
random.order=FALSE,
colors="blue")
spam<-subset(sms_raw,type=="spam")
sms_freq_words<-findFreqTerms(sms_dtm_train,5)
sms_dtm_freq_train<-sms_dtm_train[,sms_freq_words]
sms_dtm_freq_test<-sms_dtm_test[,sms_freq_words]
str(sms_freq_words)
library(e1071)
library(klaR)
convert_counts<-function(x)
{x<-ifelse(x>0,"Yes","No")}
sms_train<-apply(sms_dtm_freq_train,
MARGIN=2,
convert_counts)
str(sms_train)
sms_test<-apply(sms_dtm_freq_test,
MARGIN=2,
convert_counts)
str(sms_test)
sms_classifier<-naiveBayes(sms_train,
sms_train_labels)
library(gmodels)
sms_test_pred<-predict(sms_classifier,
sms_test)
CrossTable(sms_test_pred,
sms_test_labels,
prop.chisq=FALSE,
dnn=c('predicted','actual'))
source('~/sms_raw1.R')
library(class)
source('~/sms_classifier2.R')
source('~/SMS spam filter/sms_raw.R')
source('~/SMS spam filter/sms_classifier2.R')
source('~/SMS spam filter/sms_raw.R')
library(tm)
library(SnowballC)
library(wordcloud)
library(klaR)
library(gmodels)
sms_raw<-read.csv("~/SMS spam filter/sms_spam.csv",
stringsAsFactors=FALSE)
sms_raw$type<-factor(sms_raw$type)
library(tm)
sms_corpus<-VCorpus(VectorSource(sms_raw$text))
print(sms_corpus)
sms_corpus_clean<-tm_map(sms_corpus,
content_transformer(tolower))
sms_corpus_clean<-tm_map(sms_corpus_clean,
removeNumbers)
sms_corpus_clean<-tm_map(sms_corpus_clean,
removeWords,
stopwords())
sms_corpus_clean<-tm_map(sms_corpus_clean,
removeNumbers)
sms_corpus_clean<-tm_map(sms_corpus_clean,
removePunctuation)
library(SnowballC)
wordStem(c("swim","swam","swimming","swims"))
sms_corpus_clean<-tm_map(sms_corpus_clean,
stemDocument)
sms_corpus_clean<-tm_map(sms_corpus_clean,
stripWhitespace)
sms_dtm<-DocumentTermMatrix(sms_corpus_clean)
sms_dtm2<-DocumentTermMatrix(sms_corpus,
control=list(tolower=T,
removeNumbers=T,
stopwords=T,
removePunctuation=T,
stemming=T))
sms_dtm_train<-sms_dtm[1:4169,]
sms_dtm_test<-sms_dtm[4170:5559,]
sms_train_labels<-sms_raw[1:4169,]$type
sms_test_labels<-sms_raw[4170:5559,]$type
library(wordcloud)
sms_freq_words<-findFreqTerms(sms_dtm_train,5)
sms_dtm_freq_train<-sms_dtm_train[,sms_freq_words]
sms_dtm_freq_test<-sms_dtm_test[,sms_freq_words]
library(e1071)
library(klaR)
convert_counts<-function(x)
{x<-ifelse(x>0,"Yes","No")}
sms_train<-apply(sms_dtm_freq_train,
MARGIN=2,
convert_counts)
sms_test<-apply(sms_dtm_freq_test,
MARGIN=2,
convert_counts)
sms_classifier<-naiveBayes(sms_train,
sms_train_labels)
library(gmodels)
sms_test_pred<-predict(sms_classifier,
sms_test)
CrossTable(sms_test_pred,
sms_test_labels,
prop.chisq=FALSE,
dnn=c('predicted','actual'))
source('~/SMS spam filter/sms_classifier2.R')
sms_classifier2<-naiveBayes(sms_train,
sms_train_labels,
laplace=1)
sms_test_pred2<-predict(sms_classifier2,
sms_test)
CrossTable(sms_test_pred2,
sms_test_labels,
prop.chisq=FALSE,
dnn=c('predicted','actual'))
source('~/SMS spam filter/sms_raw.R')
sms_classifier2<-naiveBayes(sms_train,
sms_train_labels,
laplace=1)
sms_test_pred2<-predict(sms_classifier2,
sms_test)
CrossTable(sms_test_pred2,
sms_test_labels,
prop.chisq=FALSE,
dnn=c('predicted','actual'))
knn(train=sms_dtm_freq_train,
test=sms_dtm_freq_test,
cl=sms_train_labels,
k=7)
sms_knn<-knn(train=sms_dtm_freq_train,
test=sms_dtm_freq_test,
cl=sms_train_labels,
k=7)
CrossTable(sms_knn,
sms_test_labels,
prop.chisq=FALSE,
dnn=c('predicted','actual'))
remove(sms_knn)
sms_knn_pred<-knn(train=sms_dtm_freq_train,
test=sms_dtm_freq_test,
cl=sms_train_labels,
k=14)
CrossTable(sms_knn_pred,
sms_test_labels,
prop.chisq=FALSE,
dnn=c('predicted','actual'))
sms_knn_pred<-knn(train=sms_dtm_freq_train,
test=sms_dtm_freq_test,
cl=sms_train_labels,
k=3)
CrossTable(sms_knn_pred,
sms_test_labels,
prop.chisq=FALSE,
dnn=c('predicted','actual'))
sms_knn_pred<-knn(train=sms_dtm_freq_train,
test=sms_dtm_freq_test,
cl=sms_train_labels,
k=1)
CrossTable(sms_knn_pred,
sms_test_labels,
prop.chisq=FALSE,
dnn=c('predicted','actual'))
library(tm)
library(SnowballC)
library(wordcloud)
library(klaR)
library(gmodels)
source('~/SMS spam filter/sms_raw.R')
source('~/SMS spam filter/sms_classifier2.R')
source('~/SMS spam filter/sms_raw.R')
